name: "units-test"
on:
  workflow_call:

jobs:
  # unit tests
  units:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - run: npm ci
    # - run: npm test

  # test action works running from the graph
  test_ebpf:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ebpf_provider: [libbpf]
    steps:
    - name: Install mlocate
      run: sudo apt-get install -y mlocate
    - uses: actions/checkout@v4
    - uses: ./
      with:
        ebpfprovider: ${{matrix.ebpf_provider}}
    - name: verify
      run: |
        ./verify.sh ${{matrix.ebpf_provider}}

  test_xgboost:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: ./
      with:
        xgboost_version: 2.0.1
        artifact_version: 0.26.0
    - name: verify
      run: |
        ./verify.sh xgboost

  # test action works running from the graph
  test_local_cluster:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        cluster_provider: [kind, microshift]
        ebpf_provider: [libbpf]
    steps:
    - uses: actions/checkout@v4
    - uses: ./
      with:
        ebpfprovider: ${{matrix.ebpf_provider}}
        local_dev_cluster_version: v0.0.3
        cluster_provider: ${{matrix.cluster_provider}}
    - name: verify
      run: |
        ./verify.sh cluster

  # test action works running from the graph
  test_local_cluster_with_prometheus_grafana:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        cluster_provider: [kind, microshift]
        ebpf_provider: [libbpf]
    steps:
    - uses: actions/checkout@v4
    - uses: ./
      with:
        ebpfprovider: ${{matrix.ebpf_provider}}
        cluster_provider: ${{matrix.cluster_provider}}
        local_dev_cluster_version: v0.0.3
        prometheus_enable: true
        prometheus_operator_version: v0.12.0
        grafana_enable: true
    - name: verify
      run: |
        ./verify.sh cluster

  # test if kernel module can be loaded, this is very os and instance specific, ignore if it fails
  test_kernel_module:
    runs-on: ubuntu-latest
    env:
      KERNEL_MODULE_NAMES: "rapl,intel_rapl_common,intel_rapl_msr"
    steps:
    - uses: actions/checkout@v4
    - uses: ./
      with:
        kernel_module_names: ${{ env.KERNEL_MODULE_NAMES }}}
    - name: verify
      run: |
        ./verify.sh modprobe ${{ env.KERNEL_MODULE_NAMES }}
